@page "/login"


    <div class="container">
        <h3>LoginPage</h3>
        <EditForm Model="loginAdmin" OnValidSubmit="SignInAsync">
            <DataAnnotationsValidator />
            <div class="row">
                <div class="form-group  col-6">
                    <input type="email" class="form-control" placeholder="Email" @bind="loginAdmin.Email" required />
                </div>
                <div class="form-group col-6">
                    <input type="password" class="form-control" placeholder="Password" required @bind="loginAdmin.Password" />
                </div>
            </div>
            <button type="submit" class="btn btn-secondary align-items-center">Login</button>
            <div id="adminCreateResponse"></div>
        </EditForm>
    </div>


    @code {

        private LoginModel loginAdmin;

        private async Task SignInAsync()
        {
            var response = await Http.PostAsJsonAsync<LoginModel>("https://localhost:44384/api/Administrators/signin", loginAdmin);

            @if (response.IsSuccessStatusCode)
            {
                var data = JsonConvert.DeserializeObject<dynamic>(await response.Content.ReadAsStringAsync());
                Console.WriteLine(data);

                await sessionStorage.SetItemAsync("AccessToken", data.accessToken.ToString());
                NavManager.NavigateTo("/", true);
            }
            else
            {

                await jsRuntime.InvokeVoidAsync(
                "exampleJsFunctions.displayMessage",
                "Invalid Email or Password");
            }
        }



        protected override void OnInitialized()
        {
            loginAdmin = new LoginModel();
            //localStorage.RemoveItemAsync("AccessToken");
        }
    }
