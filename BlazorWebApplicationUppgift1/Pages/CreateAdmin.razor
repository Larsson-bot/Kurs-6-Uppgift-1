@page "/create-admin"

<div class="container">
    <h3>Create Admin</h3>
    <EditForm Model="admin" OnValidSubmit="@CreateAdminAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row g-3 mt-3">
            <div class="form-group col-6">
                <input type="text" class="form-control" @bind="admin.FirstName" @ref="myref" placeholder="FirstName" />
            </div>
            <div class="form-group col-6">
                <input type="text" class="form-control" @bind="admin.LastName" placeholder="LastName" />
            </div>
            <div class="form-group col-12">
                <input type="email" class="form-control" @bind="admin.Email" placeholder="Email" />
            </div>
            <div class="form-group col-6">
                <input type="password" class="form-control" @bind="admin.Password" placeholder="Password" />
            </div>
            <div class="form-group col-6">
                <input type="password" class="form-control" @bind="admin.ConfirmPassword" placeholder="Confirm Password" />
            </div>
            <button type="submit" class="btn btn-success">Create Admin</button>
            <div id="adminCreateResponse"></div>
        </div>
    </EditForm>
</div>
    @code {
        private CreateAdminModel admin;
        private ElementReference myref;

        private async Task CreateAdminAsync()
        {
            var response = await Http.PostAsJsonAsync<CreateAdminModel>("https://localhost:44384/api/Administrators/signup", admin);

            @if (response.IsSuccessStatusCode)
            {

                await jsRuntime.InvokeVoidAsync(
          "exampleJsFunctions.displayMessage",
          $"{admin.FirstName} has been created");
            
            }
            else
            {

                await jsRuntime.InvokeVoidAsync(
                "exampleJsFunctions.displayMessage",
                "Theres an Admin in this system already!");
            }



        }

      

        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender)
            {
                await myref.FocusAsync();
            }
        }


        protected override void OnInitialized()
        {
            
            admin = new CreateAdminModel();


        }

    }

